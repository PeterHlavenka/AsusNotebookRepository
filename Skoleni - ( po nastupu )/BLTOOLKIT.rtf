{\rtf1\ansi\ansicpg1250\deff0\nouicompat\deflang1029{\fonttbl{\f0\fnil Calibri;}{\f1\fnil\fcharset0 Calibri;}{\f2\fnil Consolas;}{\f3\fnil\fcharset0 Consolas;}{\f4\fnil\fcharset0 Segoe UI;}{\f5\fnil\fcharset238 Calibri;}{\f6\fnil\fcharset2 Symbol;}}
{\colortbl ;\red255\green0\blue0;\red0\green0\blue0;\red43\green145\blue175;\red163\green21\blue21;\red102\green102\blue102;\red0\green0\blue255;\red0\green77\blue187;\red0\green176\blue80;}
{\*\generator Riched20 10.0.14393}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\f0\fs28\lang9\ltrmark 8/\ltrmark 9/\ltrmark 2017\f1\lang1033                                                                                                                           \cf1\fs40 BLTOOLKIT\cf0\b0\fs28\lang9\par
\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Nainstalujeme si z firemniho serveru BLToolkit.CP.4.dll     (Package source Nielsen), zaskrtneme  projekty ve kterych budeme bl pouzivat (WPFUniverse).\par
{\pntext\f6\'B7\tab}Do App.config v projektu kde je MainWindow.xaml , nastavime connectionString. (vezmeme ho z vlastnosti databaze ).\par
{\pntext\f6\'B7\tab}Musime priradit tridy entit k tabulkam pro Galaxie.cs :       \cf2\f2\fs19   [\cf3 TableName\cf2 (\cf4 "Galaxie"\cf2 , Owner = \cf4 "dbo"\cf2 )]\f3\lang1033          (Patri to nad Class)\cf0\f1\fs28\lang9\par
{\pntext\f6\'B7\tab}Musime nastavit pro sloupec Id , ze se jedna o primarni klic a  automatickou inkrementaci                            \cf2\f2\fs19 [\cf3 PrimaryKey\cf2 ]\f3\lang1033  \f2 [\cf3 Identity\cf2 ]\cf0\f1\fs28\lang9\par
{\pntext\f6\'B7\tab}Dao trida se zmeni uz nebude dedit od EntityDaoBase ani pouzivat jeji metody na pristup do db.\par
{\pntext\f6\'B7\tab}Vytvorime novou chytrou tridu , bude se jmenovat  UniverseDataModel. Placneme je do WpfUniverseEntities.\par
{\pntext\f6\'B7\tab}UniverseDataModel dedi od DbManager , potrebuje using BLToolkit.Data a BLToolkit.Data.Linq.\par
{\pntext\f6\'B7\tab}Rekneme ji ze existuje nejaka tabulka ktera se jmenuje Galaxie \cf5 tak, ze si do public atributu vratime metodou GetTable() tabulku galaxii\cf0 .\par
{\pntext\f6\'B7\tab}Ve tride Galaxy dao si napiseme metody pro nacteni vsech galaxii a ulozeni galaxie.\par
{\pntext\f6\'B7\tab}Do usingu si vlozime UniverseDataModel  , kde bude SQLQuery. Pokud query sami nedefinujeme , vrati updatne nebo insertne vsechny sloupce.\par
{\pntext\f6\'B7\tab}Query muzeme napsat i sami :      \cf2\f2\fs19 model.VlastnostiPlanet.Where(x => x.VlastnostId == vlastnost.Id).Delete(); \f3\lang1033    \cf0\f1\fs28\lang9\par
{\pntext\f6\'B7\tab}Pri CRUD operacich kde jich probiha vic najednou, priklad tlacitko na checknuti vsech checkboxu naraz, je potreba pouzit \cf1  transakci. \cf0\par

\pard\sa200\sl276\slmult1\tab Pri \cf1 transakci \cf0 musime metode na dao tride ktera provadi zapis, dat zavislost na instanci UniverseDataModel a crud operaci provest prave na teto instanci.\par
\tab\fs22 Ve tride VlastnostiPlanetDao je metoda \fs28\par
\tab\tab\cf6\f2\fs19 public\cf2  \cf6 void\cf2  RemovePropertyFromPlanet(\cf6 int\cf2  selectedPlanetId, \cf6 int\cf2  vlastnostId, \cf3 UniverseDataModel\cf2  model)\{\par
                    model.VlastnostiPlanet.Where(x => x.PlanetaId == selectedPlanetId && x.VlastnostId == vlastnostId).Delete();\f3\lang1033      \f2\lang9\par
        \f3\lang1033\tab\f2\lang9\}\cf0\f1\fs28\par
\tab\fs22 Ktera je volana ve tride VlastnostDao a prave model ktery  vznikne tady je parametrem na kterem se operace provadi. Jinak by se vytvorila nova instance modelu a transakce by probehla napul .\fs28\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Metody DoCheckAll a DoUncheckAll jsme zrefaktorovali do metody DoAllChanges protoze meli stejny kod.\par
{\pntext\f6\'B7\tab}Odregistrovali jsme se z eventu    \cf2\f2\fs19 OnPropertySelectChanged\f3\lang1033   , \f1\fs28 aby nemohlo probehnout kliknuti na checkbox (\cf5 a tim vyvolani eventu ktery uklada do databaze ) \cf2 od uzivatele.\cf0\lang9\par
{\pntext\f6\'B7\tab}V usingu kde vznikne objekt UniverseDataModel model,  do konstrukce try\{\} catch\{\}  vlozime transakci :   \cf2\f2\fs19 model.BeginTransaction();\cf0\f1\fs28     tady je jasne , ze transakce probiha prave na tomto modelu , proto ho predavame dao tride jako ten model na kterem se uklada.\par
{\pntext\f6\'B7\tab}Osetrime jestli je nebo neni checknuto aby jsme nevkladali  neco co  uz existuje => PrimaryKey \par
{\pntext\f6\'B7\tab}\cf7\f4\fs18\lang1033 SqlException: Violation of PRIMARY KEY constraint 'PK_VlastnostiPlanet'. Cannot insert duplicate key in object 'dbo.VlastnostiPlanet'. The duplicate key value is (713, 1).     VAZEBNI TABULKA SE VKLADA UZ PRI KLIKNUTI NA CHECKBOX  A JA JSEM JI CHTEL VLOZIT ZNOVU \cf0\f1\fs28\lang9\par
{\pntext\f6\'B7\tab}\cf7\f4\fs18\lang1033 MUSI SE PROVEST KONTROLA , JESTLI UZ NENI VLASTNOST CHECKNUTA\cf0\f1\fs28\lang9\par
{\pntext\f6\'B7\tab}A Muzeme insertovat nebo deletovat.\par
{\pntext\f6\'B7\tab}Abychom nezapomneli na opetovne zaregistrovani eventu (kliknuti na checkbox) celou zalezitost vlozime do try -  finally (bez catch ) , kde ve finally provedeme opetovnou registraci.\par
{\pntext\f6\'B7\tab}Provedeme v nejakem cyklu napr foreachi operace na databazi , po skonceni musime zmeny Commitnout  :     \cf2\f2\fs19  model.CommitTransaction();\cf0\f1\fs28\par
{\pntext\f6\'B7\tab}\cf2\lang1033 Operace su musi provest i na SelectedPlanet.Properties kvuli bindingu.\cf0\lang9\par
{\pntext\f6\'B7\tab}A v catchi  zachytime vyjimku kdyz vznikne vyjimka kterou neni mozno osetrit , napr spadne spojeni s databazi . Provede se \cf1 model.RollbackTransaction \cf0 aby se zmeny neprovedly napul.\par
{\pntext\f6\'B7\tab}V takovem pripade pustime vyjimku dal pomoci throw a nechame aplikaci spadnout.\par

\pard\sa200\sl276\slmult1\par
\par
\lang1033\tab N\f5\lang1029 a ladeni se pou\f1\lang1033 ziva CallStack , pri vyhozeni vyjimky  Debug => windows => CallStack.\lang9\par
\par
\b\f0\ltrmark 10 \ltrmark August, \ltrmark 2017\b0\f1\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Jakym zpusobem se nastavuje  Id  pro novou vlastnost ? Zeptame se databaze na max moznou hodnotu   \cf2\f2\fs19  \cf6 return\cf2   model.Vlastnost.Max(x => x.Id);\cf0\f1\fs28\par
{\pntext\f6\'B7\tab}Refresh funguje pokud mame jen jednu instanci kterou upravujeme ve vice oknech . Tady je trida Manager ktery je static v MainWindow a kolekce ListVlastnosti na tride Manager se predava a upravuje po cele aplikaci. \par

\pard\sa200\sl276\slmult1\par
\b\f0\ltrmark 11 \ltrmark August, \ltrmark 2017\b0\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\f1 Aby aplikace nebyla zaspagetovana zavislostma v konstruktorech na ruzne viewModely , vytvorime si interface IGalaxySelector atd., kde soucast rozhrani bude event  a  vyhazovaci metoda. Tridam se zmeni zavislosti na viewModelech a misto nich dostanou zavislost na interfacu, pricemz se jim preda jen to co vlastne potrebujou a to jsou eventy ktere informuji , ze se zmenila galaxie , planeta atd.\par
{\pntext\f6\'B7\tab}Timto zpusobem je mozne v aplikaci vymenit viewModely za jine , staci aby taky implementovali rozhrani INecoSelector. \par
{\pntext\f6\'B7\tab}\cf8 Doma se podivat na databazove transakce , zatim nas zajima readCommited  (to je o politice zamku  v databazich )\cf0  \par
{\pntext\f6\'B7\tab}Odspagetujeme aplikaci tim ze pro vsechny zavislosti vytvorime rozhrani a predavame uz jen to.\par
{\pntext\f6\'B7\tab}Odregistrovali jsme v DoCheckAll event kliknuti , zapsali jsme vsechno nebo nic a zaregistrovali zpet. V tomto miste se musi pridat vlastnosti do SelectedPlanet.Properties , jinak do databaze se vsechno ulozi , ale po prekliknuti planety tam a zpet nebude view vedet o tom , ze se neco zmenilo.\par

\pard\sa200\sl276\slmult1\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b BLToolkit pokracovani:\b0\par
{\pntext\f6\'B7\tab}Pomoci nugetManageru  - Solution -> ManageNuGet Packages for Solution -> nainstalujeme MediaResearch.Framework.DataAccess.BLToolkit .  Uz mame z drivejsku nainstalovane BLToolkit.CP.4.dll., zaskrtnute vsechny assembly (Core, Entity ...)\par
{\pntext\f6\'B7\tab}V BLToolkitu jsou tridy ktere za nas umi vytvaret dao objekty . Tridy entit si napiseme sami, v zavorkach nad entitou [\cf3\f2\fs19 DaoFactory\cf2 (DaoType = \cf6 typeof\cf2 (\cf3 GalaxyDao\cf2 ))\cf0\f1\fs28 ]   jsout tzv. metadata.\par
{\pntext\f6\'B7\tab}Do tridy entit pridame usingy : \cf6\f2\fs19 using\cf2  Mediaresearch.Framework.DataAccess.BLToolkit;\f3\lang1033         \cf6\f2 using\cf2  Mediaresearch.Framework.DataAccess.BLToolkit.DaoFactory;\cf0\f1\fs28\lang9\par
{\pntext\f6\'B7\tab}Entita ktera ma identitu v databazi bude dedit od public class Galaxie : LightDatabaseEntityIdentityIntKey<Galaxie>\par
{\pntext\f6\'B7\tab}V metadatech ma informace       \cf2\f2\fs19  [\cf3 TableName\cf2 (\cf4 "Galaxie"\cf2 , Owner = \cf4 "dbo"\cf2 )]\cf0\f1\fs28              , kde informuje o jmenu databaze pro pripade ze by aplikace pracovala soucasne s vice databazema.\par

\pard\sa200\sl276\slmult1\tab  \cf2\f2\fs19 [\cf3 DaoFactory\cf2 (DaoType = \cf6 typeof\cf2 (\cf3 GalaxyDao\cf2 ))]\cf0\f1\fs28   ., je na to , aby se vedelo jaky typ dao objektu se ma z entity vytvorit.\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Trida UniverseDataModel musi dedit od TransactionDbManager, ma 8 konstruktoru vetsina z nich vola konstruktor rodicovske tridy.\par
{\pntext\f6\'B7\tab}Z app configu si BLToolkit umi vzit ConnectionString \par
{\pntext\f6\'B7\tab}V MainWindow  rekneme tride EntityDaoFactory ve ktere Assembly budeme brat daoObjekty  : \cf3\f2\fs19 Assembly\cf2  entities = \cf3 Assembly\cf2 .GetAssembly(\cf6 typeof\cf2 (\cf3 Galaxie\cf2 ));\cf0\f1\fs28\par
{\pntext\f6\'B7\tab}Vytvorime chytrou tridu EntityDaoFactory , rekneme ji v konstruktoru , ze databaze se jmenuje "universe" a kde ma vzit ConnectionString. \par

\pard\sa200\sl276\slmult1\tab\tab\cf3\f2\fs19 EntityDaoFactory\cf2  daoFactory = \cf6 new\cf2  \cf3 EntityDaoFactory\cf2 (\cf4 "universe"\cf2 , \cf3 Settings\cf2 .Default.ConnectionDb)\cf0\f1\fs28\par
\tab Ten si vezme z App.config\par
\tab Tridy jako je tahle muzeme v MainWindow tvorit protoze mame nainstalovany BLToolkit a using na\par
\tab\tab  \cf6\f2\fs19 using\cf2  Mediaresearch.Framework.DataAccess.BLToolkit.DaoFactory;\f3\lang1033   a  \par
\tab\tab\cf6\f2 using\cf2  Mediaresearch.Framework.DataAccess.BLToolkit.Dao;\par
\cf0\f1\fs28\lang9\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Vytvorime  rozhrani IDaoSource daoSource = \cf6\f2\fs19 new\cf2  \cf3 EntityDaoFactoryDaoSource\cf2 (daoFactory);\f3\lang1033   \f1\fs28 Je to zdroj daoObjektu.  Aby jsme se co nejvic odspagetovali budeme pouzivat vsude rozhrani , takze misto pouzivani GalaxyDao objektu budeme pouzivat jeho rozhrani IGalaxyDao.\cf0\lang9\par
{\pntext\f6\'B7\tab}\cf2\lang1033 Trida GalaxyDao bude nove dedit od  : EntityIdentityKeyDaoBase<Galaxie, UniverseDataModel, int , Galaxie>  a implementovat IGalaxyDao.    Ma dva konstruktory, zatim vim , ze se v nich predava string dBAlias , aby jsme vedeli ve ktere databazi jsme.\cf0\lang9\par

\pard\sa200\sl276\slmult1\cf2\lang1033\tab Uvnitr si rovnou napiseme rozhrani IGalaxyDao ktere dedi od : ISimpleDao<Galaxie, int >\par
\par
============================================================\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b Ukoly: \cf0\b0\lang9\par
{\pntext\f6\'B7\tab}\cf2\lang1033 Odendat SelectedPlanet z MainWindow\cf0\lang9\par
{\pntext\f6\'B7\tab}\cf2\lang1033 Predelat tridy entit podle galaxie a dao objekty podle galaxyDao\cf0\lang9\par
{\pntext\f6\'B7\tab}Predelat zavislosti ve viewModelech na IDaoSource\par
{\pntext\f6\'B7\tab}Dao vezmeme pomoci metody  m_galaxyDao =   daoSource.GetDaoByEntityType<IGalaxyDao, Galaxie, int > ();\par

\pard\sa200\sl276\slmult1 ===========================================================\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 PropertiesViewModel chce vedet ktera planeta byla vybrana aby podle ni mohl checknout boxy a po skrtnuti mohl zapsat nebo odebrat  vlastnost z vazebnich tabulek. SelectedPlanet objekt dostane od eventu OnPlanetChanged.  Dostane event proto, ze ma zavislost na rozhrani IPlanetSelector ktere mu umozni stat se posluchacem \par

\pard\sa200\sl276\slmult1\tab\tab\cf2\f2\fs19 m_IPlanetSelector.OnPlanetChanged += OnPlanetChanged;\cf0\f1\fs28\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Tady nam staci udelat  pro kazdou checknutou polozku : vdc.IsChecked = true . To je vsechno o zapis se postara trida VlastnostDataContract , tim , ze vyhodi event OnPropertySelectChanged.  Kdo ho  posloucha ?  Metoda ve tride PropertiesViewModel . Ta v eventu dostane datacontract ktery se zmenil a podle toho jestli je checknutej ho zapise do databaze a do objektu na ktery je bindovano: SelectedPlanet.Properties\par
{\pntext\f6\'B7\tab}To same se musi stat ve tride EditProperty kde ja blbec v konstruktoru tvorim novou selectedPlanet a proto mi to blbne.\par
{\pntext\f6\'B7\tab}Tridu EditProperty jsem jen zaregistroval jako posluchace eventu OnPlanetChanged , jedine co dela je ze rekne :  SelectedPlanet = selectedPlanet (predany objekt eventem). Aplikace pada na DoCheckAll => vyhazuje NullRefference ,  kdyz se pojede od breaku po vyjimce dostaneme se k oknu TransactionDbManager not found.\par
{\pntext\f6\'B7\tab}\cf8 Tak mne napada ze  event OnPlanetChanged byl vyhozen jeste predtim nez jsem vytvoril objekt EditPropertyViewModel . Ten nemuze vedet jaka planeta byla vybrana protoze se zaregistruje jako posluchac az po vyhozeni eventu . Jak teda vi jakou planetu zobrazuje a kde ji vzal ?  Musi dostat stejny objekt ktery v eventu dostala trida PropertiesViewModel. Ta uz totiz v case vyhozeni eventu existovala a objekt SelectedPlanet od eventu dostala. Mozna by to slo nejak z teto tridy dostat do EditViewModelu. \cf0\par

\pard\sa200\sl276\slmult1\par
\b\f0\ltrmark 14 \ltrmark August, \ltrmark 2017\b0\f1\par
\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Entita Galaxie dedi od:          LightDatabaxeEntity\cf1 Identity\cf8 IntKey\cf0 <Galaxie> .       Protoze ma Identitu v databazi . Ma taky nastavenou inkrementaci.\par
{\pntext\f6\'B7\tab}Entita Planeta to same:         LightDatabaxeEntity\cf1 Identity\cf8 IntKey\cf0 <Planeta> \par
{\pntext\f6\'B7\tab}Entita Vlastnost dedi od:         LightDatabaseEntity\cf8 IntKey\cf0 <Vlastnost>            Ma sice primarni klic ale nema nastavenou automatickou inkrementaci.\par
{\pntext\f6\'B7\tab}Entita VlastnostiPlanet dedi od:    LightDatabaseEntity\cf7 MultiKey\cf0 Base<VlastnostiPlanet>            Protoze ma dva cizi klice a nema automatickou inkrementaci. Je to jen vazebni tabulka. \par

\pard\sa200\sl276\slmult1\par
\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Dao trida :  GalaxyDao   dedi od :  Entity\cf1 IdentityKey\cf0 DaoBase <Galaxie , UniverseDataModel\cf7 , int\cf0 , Galaxie>    \cf8 Protoze ma identitu.   \cf0 Imlementuje IGalaxyDao . V tomto rozhrani jsou definovane metody ktere musi dao trida implementovat . Jsou tu metody na crud operace . Ty atomicke se neimplementujou , pouzivaji se rodicovske metody.\cf8\par
{\pntext\f6\'B7\tab}\cf0 Dao trida :  PlanetDao   dedi od :  Entity\cf1 IdentityKey\cf0 DaoBase <Planeta, UniverseDataModel\cf7 , int\cf0 , Planeta>   \cf8 Protoze ma identitu. \cf0    Implementuje IPlanetDao. V tomto rozhrani jsou definovane metody ktere musi dao trida implementovat . Jsou tu metody na crud operace . Ty atomicke se neimplementujou , pouzivaji se rodicovske metody.\par
{\pntext\f6\'B7\tab}Dao trida :  VlastnostDao   dedi od :  EntityDaoBase <Vlastnost, UniverseDataModel\cf7 , int\cf0 , Vlastnost>   \cf8 Protoze \b nema\b0  identitu.  \cf0 Implementuje IVlastnostDao. V tomto rozhrani jsou definovane metody ktere musi dao trida implementovat . Jsou tu metody na crud operace . Ty atomicke se neimplementujou , pouzivaji se rodicovske metody.\par
{\pntext\f6\'B7\tab}Dao trida :  VlastnostiPlanetDao  dedi od EntityMultiKeyDaoBase<VlastnostiPlanet, UniverseDataModel , VlastnostiPlanet>   \cf1 Protoze \b nema \b0 primarni klic. \cf8 .  \cf0 Implementuje IVlastnostiPlanet. V tomto rozhrani jsou definovane metody ktere musi dao trida implementovat . Jsou tu metody na crud operace . Ty atomicke se neimplementujou , pouzivaji se rodicovske metody.\cf8\par

\pard\sa200\sl276\slmult1\cf0\par
\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Rozhrani IGalaxyDao dedi od ISimpleDao<Galaxie, \cf7 int\cf0 >      (\cf5 Entita, primarni klic\cf0 )\par
{\pntext\f6\'B7\tab}Rozhrani IPlanetDao dedi od ISimpleDao<Planeta\cf7 , int\cf0 > \par
{\pntext\f6\'B7\tab}Rozhrani IVlastnostDao dedi od ISimpleDao<Vlastnost, \cf7 int\cf0 >\par
{\pntext\f6\'B7\tab}Rozhrani IVlastnostiPlanet dedi od \cf7 IEntityMultiKeyDaoBase < VlastnostiPlanet>  \cf0 jde totiz o vazebni tabulku ktera nema identitu a ma vic klicu.\par

\pard\sa200\sl276\slmult1\par
\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Tridu VlastnostDao dedi od           \cf3\f2\fs22 EntityIdentityKeyDaoBase\cf2 <\cf3\f3\lang1033 Vlastnost\cf2\f2\lang9 , \cf3 UniverseDataModel\cf2 , \cf6 int\cf2 , \cf3\f3\lang1033 Vlastnost\cf2\f2\lang9 >\f3\lang1033    \cf0\f1\fs28\lang9 i kdyz nema  inkrementaci , ale ma primarni klic\par
{\pntext\f6\'B7\tab}Ma dva konstruktory (stejne jako ostatni dao tridy), ktere volaji konstruktor rodice, predavaji nazev databaze jako dbAlias a druhy konstr. urcuje navic stupen izolace transakci.\par
{\pntext\f6\'B7\tab}Trida VlastnostiPlanetDao dedi od    \cf3\f2\fs22 EntityMultiKeyDaoBase\cf2 <\cf3 VlastnostiPlanet\cf2 , \cf3 UniverseDataModel\cf2 , \cf3 VlastnostiPlanet\cf2 >\f3\lang1033  \f1\fs28 protoze ma jen dva cizi klice a nema identitu . Rozhrani IVlastnostiPlanetDao ale potom nemuze dedit od \cf3\f2\fs22 ISimpleDao\cf2 <\cf3\f3 VlastnostiPlanet\cf2\f2 , \cf6 int\cf2 >\f1      \fs28 protoze rodicovske rozhrani by chtelo   primarni klic.\cf0\lang9\par

\pard\sa200\sl276\slmult1\cf2\lang1033\tab  Proto rozhrani IVlastnostiPlanetDao dedi od IEntityMultiKeyDaoBase <VlastnostiPlanet> . Kvuli transakcim pridame do tohoto rozhrani metodu   \cf3\f2\fs22 UniverseDataModel\cf2  CreateDbModel();\f3   (Trida \tab VlastnostiPlanetDao ji musi \tab implementovat, protoze implementuje rozhrani).\cf0\f1\lang9\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs28 Rozhrani se pise az za zavorky, ktere uzaviraji dao tridu .  \fs20 (Jinak to chce using static celou tridu)\fs28\par
{\pntext\f6\'B7\tab}Ve vsech metodach kde bylo UniverseDataModel model = new UniverseDataModel, se prava cast zmeni na :   \cf6\f2\fs22 using\cf2  (\cf3 UniverseDataModel\cf2  model = CreateDbContext())\cf0\f1\fs28\par

\pard\sa200\sl276\slmult1\tab Tato metoda se stara mimo jine o transakce \par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Sloupec Id v entitach byt nemusi protoze je v predkovi.\par
{\pntext\f6\'B7\tab}Ve tride ktera se stara o vazebni tabulku bude v rozhrani navic metoda ktera nam vrati UniverseDataModel v podobe DbContext.\par

\pard\fi-360\li720\sa200\sl276\slmult1\cf2\f2\fs19  \f3\lang1033\tab\tab\tab\tab\cf6\f2\lang9 public\cf2  \cf3 UniverseDataModel\cf2  CreateDbModel()\f3\lang1033    \{     \cf6\f2 return\cf2  CreateDbContext();\f3      \}\f2\lang9             \par

\pard\sa200\sl276\slmult1\cf0\f1\fs28\tab Tato metoda nam vrati instanci kterou pouzijeme pro zapis transakce.\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 V metode DoAllChanges uz take netvorime UniverseDataModel ale pouzijeme  metodu na tride VlastnostiPlanet   CreateDbModel.\par

\pard\sa200\sl276\slmult1\par
\b\tab Automaticke transakce pomoci TransactionManageru\b0\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 V MainWindow si do vytvareni instance EntityDaoFactory pridame dalsi parametr - je to nova instance TransactionManageru.\par

\pard\sa200\sl276\slmult1\tab\tab\tab\tab\cf3\f2\fs19 EntityDaoFactory\cf2  daoFactory = \cf6 new\cf2  \cf3 EntityDaoFactory\cf2 (\cf4 "universe"\cf2 , \cf3 Settings\cf2 .Default.ConnectionDb, \cf6 new\cf2  \cf3 TransactionManager\cf2 ())\f3\lang1033  \{ ....\f2\lang9\par
\f3\lang1033\tab\f1\fs28 Jde o nadstavbu BLToolkitu ktera se postara o to , aby se kod ktery uzavreme do delegata Action , ktery TManageru predame,  provedl v jedne transakci . Postara se zaroven o vsechny vlozene transakce a v \tab pripade vyjimky proces rollbackne. \par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Na tride DaoSource ted najdeme vlastnost TransactionManager a na ni se daji volat metody. \cf0\lang9\par
{\pntext\f6\'B7\tab}\cf2\lang1033 Vlozime akce ktere chceme provadet v transakci do delegata Action napr: \cf0\lang9\par

\pard\sa200\sl276\slmult1\tab\tab\tab\tab\cf3\f2\fs24 Action\cf2  action = () =>\f3\lang1033  \{   nejake crud operace   \};\par
\tab\fs28 a zavolame : \fs24\tab\tab                    \f2\lang9\par
\fs19             \f3\lang1033\tab\tab\tab\f2\fs24 m_transactionManager.CallInsideTransaction(action, m_vlastnostiPlanetDao.CreateCommonDbContext());\cf0\f1\lang9\par
\fs28\par
\tab Prvnim parametrem je nase akce , a druhym je instance UniverseDataModelu vytvorena pomoci metody CreateCommonDbContext volane na tride m_vlastnostiPlanetDao(\cf5 kde je taky explicitne napsana (return  \tab CreateDbContext) \cf0 ).\par
\tab Metoda CreateDbContext je na tride VlastnostiPlanetDao dostupna, protoze je to metoda rodicovske tridy od ktere dedi. ( EntityMultiKeyDaoBase ) .\par
\par
\b\f0\ltrmark 15 \ltrmark August, \ltrmark 2017\b0\f1\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Ve tride VlastnostDao jsme prepsali metodu Rodice  Insert     \cf6\f2\fs19 public\cf2  \cf6 override\cf2  \cf6 void\cf2  Insert(\cf3 Vlastnost\cf2  obj)\cf0\f1\fs28\par

\pard\sa200\sl276\slmult1\tab Metodu jsme ale nepouzili , misto toho jsme transakci provedli pomoci TransactionManageru. (DoAllChanges).\par

\pard\sa200\sl276\slmult1\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
.\fs22\par
}
 